import json
import random

async def advertise_product(update, context):
    with open('data/products.json', 'r', encoding='utf-8') as f:
        all_products = json.load(f)

    filtered_products = all_products.copy()

    category = context.user_data.get("category")
    if category == "cheap":
        filtered_products = sorted(filtered_products, key=lambda x: x["price"])
    elif category == "brand_casio":
        filtered_products = [p for p in filtered_products if "casio" in p["name"].lower()]
    elif category in ["sport_watch", "business_watch", "mechanical_watch", "luxury_watch", "smart_watch"]:
        filtered_products = [p for p in filtered_products if category == p.get("category")]

    max_price = context.user_data.get("max_price")
    if max_price:
        filtered_products = [p for p in filtered_products if isinstance(p["price"], (int, float)) and p["price"] <= max_price]
    if not filtered_products:
        filtered_products = sorted(all_products, key=lambda x: x["price"])[:3]
        await update.message.reply_text("üòï –ù–µ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤. –í–æ—Ç –Ω–∞—à–∏ —Ç–æ–ø-–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:")

    for product in filtered_products[:3]:
        name = product["name"]
        price = product["price"]
        description = product["description"]
        image = product.get("image")

        caption = f"<b>{name}</b>\n–¶–µ–Ω–∞: {price}‚ÇΩ\n{description}"

        if image:
            await update.message.reply_photo(photo=image, caption=caption, parse_mode='HTML')
        else:
            await update.message.reply_text(caption, parse_mode='HTML')

async def advertise_product_direct(chat_id, bot, user_data):
    with open('data/products.json', 'r', encoding='utf-8') as f:
        all_products = json.load(f)

    filtered_products = all_products.copy()

    # –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    category = user_data.get("category")
    if category == "cheap":
        filtered_products = sorted(filtered_products, key=lambda x: x["price"])
    elif category == "brand_casio":
        filtered_products = [p for p in filtered_products if "casio" in p["name"].lower()]
    elif category in ["sport_watch", "business_watch", "mechanical_watch", "luxury_watch", "smart_watch"]:
        filtered_products = [p for p in filtered_products if category == p.get("category")]

    # –§–∏–ª—å—Ç—Ä –ø–æ –±—é–¥–∂–µ—Ç—É
    max_price = user_data.get("max_price")
    if max_price:
        filtered_products = [p for p in filtered_products if isinstance(p["price"], (int, float)) and p["price"] <= max_price]

    # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚Äî fallback
    if not filtered_products:
        filtered_products = sorted(all_products, key=lambda x: x["price"])[:3]
        await bot.send_message(chat_id=chat_id, text="üòï –ù–µ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤. –í–æ—Ç –Ω–∞—à–∏ —Ç–æ–ø-–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:")

    # –í—ã–±–∏—Ä–∞–µ–º 1 —Å–ª—É—á–∞–π–Ω—ã–π —Ç–æ–≤–∞—Ä
    product = random.choice(filtered_products)
    name = product["name"]
    price = product["price"]
    description = product["description"]
    image = product.get("image")

    caption = (
        f"üî• <b>{name}</b> üî•\n"
        f"üí∞ –í—Å–µ–≥–æ –∑–∞ <b>{price}‚ÇΩ</b>!\n\n"
        f"{description}\n\n"
        f"üì¶ –û—Å—Ç–∞–ª–æ—Å—å –Ω–µ–º–Ω–æ–≥–æ! –£—Å–ø–µ–π –∑–∞–∫–∞–∑–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è!"
    )

    if image:
        await bot.send_photo(chat_id=chat_id, photo=image, caption=caption, parse_mode='HTML')
    else:
        await bot.send_message(chat_id=chat_id, text=caption, parse_mode='HTML')
